import { serve } from "https://deno.land/std@0.168.0/http/server.ts"
import { SmtpClient } from "https://deno.land/x/smtp@v0.7.0/mod.ts"

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
  'Access-Control-Allow-Methods': 'POST, OPTIONS',
}

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response('ok', { headers: corsHeaders })
  }

  try {
    const { to, subject, content, html, attachments } = await req.json()

    // Get IONOS credentials from environment variables
    const IONOS_EMAIL = Deno.env.get('IONOS_EMAIL') || 'bielefeld@relocato.de'
    const IONOS_PASSWORD = Deno.env.get('IONOS_PASSWORD') || 'Bicm1308' // Fallback to known password
    const IONOS_SMTP_HOST = Deno.env.get('IONOS_SMTP_HOST') || 'smtp.ionos.de'
    const IONOS_SMTP_PORT = parseInt(Deno.env.get('IONOS_SMTP_PORT') || '587')

    console.log('üìß Sending email via IONOS SMTP...')
    console.log(`From: ${IONOS_EMAIL}`)
    console.log(`To: ${to}`)
    console.log(`Subject: ${subject}`)

    // Create SMTP client
    const client = new SmtpClient()

    // Configure connection
    const connectConfig = {
      hostname: IONOS_SMTP_HOST,
      port: IONOS_SMTP_PORT,
      username: IONOS_EMAIL,
      password: IONOS_PASSWORD,
    }

    console.log('Connecting to IONOS SMTP...')
    await client.connectTLS(connectConfig)

    // Prepare email data
    const emailData: any = {
      from: `Relocato Bielefeld <${IONOS_EMAIL}>`,
      to: Array.isArray(to) ? to.join(',') : to,
      subject: subject,
      content: content || 'This email requires HTML support.',
      html: html || undefined,
    }

    // Handle attachments if provided
    if (attachments && attachments.length > 0) {
      emailData.attachments = attachments.map((att: any) => ({
        filename: att.filename,
        content: att.content,
        encoding: att.encoding || 'base64',
        contentType: att.contentType || 'application/octet-stream'
      }))
    }

    // Send email
    await client.send(emailData)
    await client.close()

    console.log('‚úÖ Email sent successfully!')

    return new Response(
      JSON.stringify({ 
        success: true, 
        message: 'Email sent successfully',
        details: {
          from: IONOS_EMAIL,
          to: Array.isArray(to) ? to : [to],
          subject: subject
        }
      }),
      { 
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 200,
      },
    )
  } catch (error) {
    console.error('‚ùå Error sending email:', error)
    return new Response(
      JSON.stringify({ 
        success: false, 
        error: error.message,
        details: error.stack
      }),
      { 
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 500,
      },
    )
  }
})